<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tangmo.xizhu.customer.dao.TaskDao">
    <resultMap id="TaskMap" type="com.tangmo.xizhu.customer.entity.Task">
        <id column="uuid" property="uuid"/>
        <result column="device_pid" property="devicePid"/>
        <result column="company_name" property="companyName"/>
        <result column="device_type" property="deviceType"/>
        <result column="contact_name" property="contactName"/>
        <result column="mobile" property="mobile"/>
        <result column="task_no" property="taskNo"/>
        <result column="assembly_type" property="assemblyType"/>
        <result column="trouble_type" property="troubleType"/>
        <result column="task_assign_type" property="taskAssignType"/>
        <result column="detail" property="detail"/>
        <result column="is_outService" property="isOutservice"/>
        <result column="task_status" property="taskStatus"/>
        <result column="task_type" property="taskType"/>
        <result column="created_by" property="createdBy"/>
        <result column="executor" property="executor"/>
        <result column="device_address" property="deviceAddress"/>
        <result column="user_name" property="createdBy"/>
        <result column="created_time" property="createdTime"/>

    </resultMap>
    <select id="selectAuditedTask" resultMap="TaskMap">
      SELECT uuid, task_type,company_name,device_type,contact_name,mobile,task_status,created_time,detail,created_by from s_service_task
      where uuid in (select task_id from s_audit_task where created_by = #{userId} and operation = 1)
      order by created_time desc
    </select>

    <update id="updateStatus">
        update s_service_task set task_status = #{status} where uuid = #{taskId}
    </update>

    <update id="updateStatusAndType">
        update s_service_task set task_status = #{status},task_type = #{taskType} where uuid = #{taskId}
    </update>

    <insert id="insertTask" parameterType="com.tangmo.xizhu.customer.entity.Task">
        INSERT INTO s_service_task
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                uuid,
            </if>
            <if test="devicePid != null">
                device_pid,
            </if>
            <if test="companyName != null">
                company_name,
            </if>
            <if test="deviceType != null">
                device_type,
            </if>
            <if test="contactName != null">
                contact_name,
            </if>
            <if test="mobile != null">
                mobile,
            </if>
            <if test="taskNo != null">
                task_no,
            </if>
            <if test="assemblyType != null">
                assembly_type,
            </if>
            <if test="troubleType != null">
                trouble_type,
            </if>
            <if test="taskAssignType != null">
                task_assign_type,
            </if>
            <if test="detail != null">
                detail,
            </if>
            <if test="isOutservice != null">
                is_outservice,
            </if>
            <if test="createdBy != null">
                created_by,
            </if>
            <if test="taskStatus != null">
                task_status,
            </if>
            <if test="taskType != null">
                task_type,
            </if>
            <if test="executor != null">
                executor,
            </if>
            <if test="deviceAddress != null">
                device_address,
            </if>
                created_time,
        </trim>
        values
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="uuid != null">
                #{uuid},
            </if>
            <if test="devicePid != null">
                #{devicePid},
            </if>
            <if test="companyName != null">
                #{companyName},
            </if>
            <if test="deviceType != null">
                #{deviceType},
            </if>
            <if test="contactName != null">
                #{contactName},
            </if>
            <if test="mobile != null">
                #{mobile},
            </if>
            <if test="taskNo != null">
                #{taskNo},
            </if>
            <if test="assemblyType != null">
                #{assemblyType},
            </if>
            <if test="troubleType != null">
                #{troubleType},
            </if>
            <if test="taskAssignType != null">
                #{taskAssignType},
            </if>
            <if test="detail != null">
                #{detail},
            </if>
            <if test="isOutservice != null">
                #{isOutservice},
            </if>
            <if test="createdBy != null">
                #{createdBy},
            </if>
            <if test="taskStatus != null">
                #{taskStatus},
            </if>
            <if test="taskType != null">
                #{taskType},
            </if>
            <if test="executor != null">
                #{executor},
            </if>
            <if test="deviceAddress != null">
                #{deviceAddress},
            </if>
                getDate()
        </trim>
    </insert>

    <select id="selectByStatusAndUser" resultMap="TaskMap">
        select task.uuid,task.created_time,task.company_name,task.device_type,suser.user_name,task.detail FROM s_service_task task
        left join s_user suser on task.created_by = suser.uuid
        where task.task_status = #{status}
        <if test="userId != null">
            and task.executor = #{userId}
        </if>
        order by task.created_time desc
    </select>

    <select id="selectLaunchedTask" resultMap="TaskMap">
        select task.uuid,task.created_time,task.company_name,task.device_type,suser.user_name,task.detail FROM s_service_task task
        left join s_user suser on task.created_by = suser.uuid
        where task.created_by = #{userId}
        order by task.created_time desc
    </select>

    <select id="selectByPid" resultMap="TaskMap">
        select * from s_service_task where device_pid = #{devicePid} order by created_time desc
    </select>

    <select id="selectByStatus" resultMap="TaskMap">
        select task.uuid,task.created_time,task.company_name,task.device_type,suser.user_name,task.detail FROM s_service_task task
        left join s_user suser on task.created_by = suser.uuid
        where task.task_status = #{status}
        order by task.created_time desc
    </select>

    <update id="updateTaskUser">
        update s_service_task set executor = #{userId}
        <if test="status != null">
            ,task_status = #{status}
        </if>
        <if test="taskType != null">
            ,task_type = #{taskType}
        </if>
        where uuid = #{taskId}
    </update>

    <select id="selectUndoCountByUser" resultType="java.lang.Integer">
        select count(*) from s_service_task where executor = #{userId} and task_status = 1
    </select>

    <select id="selectUnauditCountByUser" resultType="java.lang.Integer">
        select count(*) from s_service_task where  task_status = 0
    </select>

    <select id="selectById" resultMap="TaskMap">
        select task.uuid,task.created_time,task.company_name,task.device_type,suser.user_name,task.detail,
        task.task_type,task.mobile,task.company_name,task.contact_name,task.trouble_type,task.assembly_type,
        task.task_assign_type
         from s_service_task task left join s_user suser ON
        task.created_by = suser.uuid where task.uuid = #{uuid}
    </select>
</mapper>